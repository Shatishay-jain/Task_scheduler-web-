/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}
html{font-size:62.5%}body{background:#333745;font-family:Arial, Helvetica, sans-serif;font-size:1.6rem}button{cursor:pointer}button:disabled{cursor:default}.add-option-error{color:#a5afd7;font-style:italic;margin:1.6rem 0 0 0;padding:0 1.6rem}.add-option{display:flex;flex-direction:column;padding:1.6rem}.add-option-content{border-bottom:0.3rem solid #1d2028;border:none;color:#333745;background:#a5afd7;flex-grow:1;margin:0 0 1.2rem 0;padding:1.6rem}@media (min-width: 45rem){.add-option{flex-direction:row}.add-option-content{margin:0 1.2rem 0 0}}.big-button{background:#8357c5;border:none;border-bottom:0.6rem solid #693cad;color:white;font-weight:bold;font-size:3.2rem;margin-bottom:1.2rem;padding:2.4rem;width:100%}.big-button:disabled{opacity:.5}@media (min-width: 45rem){.big-button{margin-bottom:4.8rem}}.button{background:#8357c5;border:none;border-bottom:0.3rem solid #693cad;color:white;font-weight:500;padding:1.2rem}.button--link{background:none;border:none;color:#a5afd7;padding:0}.container{max-width:60rem;margin:0 auto;padding:0 1.6rem}.header{background:#20222b;color:white;margin-bottom:1.6rem;padding:1.6rem 0}.header__title{font-size:3.2rem;margin:0}.header__subtitle{color:#a5afd7;font-size:1.6rem;font-weight:500;margin:0}@media (min-width: 45rem){.header{margin-bottom:4.8rem}}.ReactModalPortal>div{opacity:0}.ReactModalPortal .ReactModal__Overlay{align-items:center;display:flex;justify-content:center;transition:opacity 500ms ease-in-out}.ReactModalPortal .ReactModal__Overlay--after-open{opacity:1}.ReactModalPortal .ReactModal__Overlay--before-close{opacity:0}.modal{background:#464b5e;color:white;max-width:30rem;outline:none;padding:3.2rem;text-align:center}.modal__title{margin:0 0 1.6rem 0}.modal__body{font-size:2rem;font-weight:300;margin:0 0 3.2rem 0;word-break:break-all}.widget{background:#464b5e;margin-bottom:3.2rem}.widget-element{background:#a5afd7;margin:0;padding:1.6rem;border-bottom:1px solid #c8cee7;text-align:center}.widget-header{background:#3c4251;color:#a5afd7;display:flex;justify-content:space-between;padding:1.6rem}.widget-header__title{margin:0}.option{border-bottom:1px solid #acb5da;display:flex;justify-content:space-between;padding:3.2rem 1.6rem}.option__text{color:white;font-weight:500;font-size:2rem;margin:0;word-break:break-all}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/